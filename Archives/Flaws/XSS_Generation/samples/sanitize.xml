<?xml version="1.0"?>

<sanitize>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>email_filter</dir>
		</path>
		<comment>Uses an email_filter via filter_var function</comment>
		<code>$sanitized = filter_var($tainted, FILTER_SANITIZE_EMAIL);
if (filter_var($sanitized, FILTER_VALIDATE_EMAIL)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "0" />
		<!-- Remove all characters except letters, digits and ! # $ % & ' * + - / = ? ^ _ ` { | } ~ @ . [ ]
		-->
		<relevancy>0.5</relevancy>
	</sample>

	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>full_special_chars_filter</dir>
		</path>
		<comment>Uses a full_special_chars_filter via filter_var function</comment>
		<code>$checked_data = filter_var($tainted, FILTER_SANITIZE_FULL_SPECIAL_CHARS);</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" rule1 = "1" />
		<!-- Equivalent to calling htmlspecialchars() with ENT_QUOTES set		
		& -> &amp; 
		" -> &quot; when ENT_NOQUOTES is not set.
		' -> &#039; (or &apos;) only when ENT_QUOTES is set.
		< -> &lt;
		> -> &gt;
		-->
		<relevancy>1</relevancy>
	</sample>

	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>magic_quotes_filter</dir>
		</path>
		<comment>Uses a magic_quotes_filter via filter_var function</comment>
		<code>$checked_data = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);</code>
		<safety doubleQuote = "1" scriptBlock = "0" simpleQuote = "1" escape = "0"/>
		<!-- Apply addslashes
		Add \ before ' " \ NULL		
		-->
		<relevancy>0.5</relevancy>
	</sample>

	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>number_float_filter</dir>
		</path>
		<comment>Uses a number_float_filter via filter_var function</comment>
		<code>$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_FLOAT)) 
$checked_data = $sanitized ;
else
$checked_data = "0" ;</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" URL_CSS_context = "1" property_CSS_context = "1" rule1 ="1"/>
		<!-- Remove all characters except digits, +- and optionally .,eE. 
		- can be dangerous
		-->
		<relevancy>0.5</relevancy>
	</sample>

	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>number_int_filter</dir>
		</path>
		<comment>Uses a number_int_filter via filter_var function</comment>
		<code>$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_INT)) 
$checked_data = $sanitized ;
else
$checked_data = "0" ;</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" URL_CSS_context = "1" property_CSS_context = "1" rule1 ="1"/>
		<!--  	Remove all characters except digits, + and -
		- can be dangerous
		-->
		<relevancy>0.5</relevancy>
	</sample>

	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>special_chars_filter</dir>
		</path>
		<comment>Uses a special_chars_filter via filter_var function</comment>
		<code>$checked_data = filter_var($tainted, FILTER_SANITIZE_SPECIAL_CHARS);</code>
		<safety doubleQuote = "1" scriptBlock = "1" simpleQuote = "1" rule1 = "1" />
		<!-- HTML-escape ' " < > & and characters with ASCII value less than 32, 
		optionally strip or encode other special characters. 
		-->		
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>VALIDATION</dir>
			<dir>email_filter</dir>
		</path>
		<comment>Flushes content of $sanitized if the filter email_filter is not applied</comment>
		<code>if (filter_var($tainted, FILTER_VALIDATE_EMAIL)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "0" />
		<!-- Remove all characters except letters, digits and ! # $ % & ' * + - / = ? ^ _ ` { | } ~ @ . [ ]
		-->
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>VALIDATION</dir>
			<dir>number_float_filter</dir>
		</path>
		<comment>Flushes content of $sanitized if the filter number_float_filter is not applied</comment>
		<code>if (filter_var($tainted, FILTER_VALIDATE_FLOAT)) 
$checked_data = $tainted ;
else
$checked_data = "0" ;</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" URL_CSS_context = "1" property_CSS_context = "1" rule1 ="1"/>
		<!-- Remove all characters except digits, +- and optionally .,eE. 
		- can be dangerous
		-->
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>VALIDATION</dir>
			<dir>number_int_filter</dir>
		</path>
		<comment>Flushes content of $sanitized if the filter number_int_filter is not applied</comment>
		<code>if (filter_var($tainted, FILTER_VALIDATE_INT)) 
$checked_data = $tainted ;
else
$checked_data = "0" ;</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" URL_CSS_context = "1" property_CSS_context = "1" rule1 ="1"/>
		<!--  	Remove all characters except digits, + and -
		- can be dangerous
		-->
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_float</dir>
		</path>
		<comment>sanitize : cast in float</comment>
		<code>$checked_data =  (float) $tainted ;</code>
		<safety safe = "1"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_float_sort_of</dir>
		</path>
		<comment>sanitize : cast via += 0.0</comment>
		<code>$checked_data =  $tainted ;
$checked_data += 0.0 ;</code>
		<safety safe = "1"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_int</dir>
		</path>
		<comment>sanitize : cast into int</comment>
		<code>$checked_data =  (int) $tainted ;</code>
		<safety safe = "1"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_int_sort_of</dir>
		</path>
		<comment>sanitize : cast via += 0</comment>
		<code>$checked_data =  $tainted ;
$checked_data += 0 ;</code>
		<safety safe = "1"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_int_sort_of2</dir>
		</path>
		<comment>sanitize : cast via += 0</comment>
		<code>$checked_data =  $tainted + 0;</code>
		<safety safe = "1"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>settype_float</dir>
		</path>
		<comment>sanitize : settype (float)</comment>
		<code>if(settype($tainted, "float"))
$checked_data = $tainted ;
else
$checked_data = 0.0 ;</code>
		<safety safe = "1"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>settype_int</dir>
		</path>
		<comment>sanitize : use of floatval</comment>
		<code>if (settype($tainted, "integer"))
$checked_data = $tainted ;
else
$checked_data = 0 ;
</code>
		<safety safe = "1"/>
		<relevancy>0.5</relevancy>
	</sample>

	<sample>
		<path>
			<dir>addslashes</dir>
		</path>
		<comment>sanitize : use of the function addslashes</comment>
		<code>$checked_data = addslashes($tainted);</code>
		<safety doubleQuote = "1" scriptBlock = "0" simpleQuote = "1" escape = "0"/>
		<!-- Add \ before ' " \ NULL		
		-->
		<relevancy>0.5</relevancy>
	</sample>	
	
	<sample>
		<path>
			<dir>no_sanitizing</dir>
		</path>
		<comment>sanitize : none</comment>
		<code>$checked_data = $tainted;</code>
		<safety />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>floatval</dir>
		</path>
		<comment>sanitize : use of floatval</comment>
		<code>$checked_data = floatval($tainted);</code>
		<safety safe = "1" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>htmlentities</dir>
		</path>
		<comment>sanitize : use of the function htmlentities. Sanitizes the query but has a high chance to produce unexpected results</comment>
		<code>$checked_data = htmlentities($tainted, ENT_QUOTES);</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" rule1 = "1" />
		<!-- This function is identical to htmlspecialchars() in all ways, except with htmlentities(),
		all characters which have HTML character entity equivalents are translated into these entities. 
		-->
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>htmlspecialchars</dir>
		</path>
		<comment>sanitize : use of the function htmlspecialchars.</comment>
		<code>$checked_data = htmlspecialchars($tainted, ENT_QUOTES);</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" rule1 = "1" />
		<!-- translations performed : 
		& -> &amp; 
		" -> &quot; when ENT_NOQUOTES is not set.
		' -> &#039; (or &apos;) only when ENT_QUOTES is set.
		< -> &lt;
		> -> &gt;
		-->	
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>intval</dir>
		</path>
		<comment>sanitize : use of intval</comment>
		<code>$checked_data = intval($tainted);</code>
		<safety safe= "1"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>mysql_real_escape_string</dir>
		</path>
		<comment>SANITIZE : use of mysql_real_escape string</comment>
		<code>$checked_data = mysql_real_escape_string($tainted);</code>
		<safety escape = "1" doubleQuote = "1" scriptBlock = "0" simpleQuote = "1" rule1 = "0"/>
		<!--
		mysql_real_escape_string() calls MySQL's library function mysql_real_escape_string,
		which prepends backslashes to the following characters:
		\x00
		\n 
		\r
		\
		'
		"
		\x1a 
		-->
		<relevancy>0.25</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>preg_replace</dir>
		</path>
		<comment>SANITIZE : use of preg_replace</comment>
		<code>$checked_data = preg_replace('/\'/', '', $tainted);</code>
		<safety simpleQuote = "1" />
		<!-- delete all ' -->
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>preg_replace2</dir>
		</path>
		<comment>SANITIZE : use of  with another regex</comment>
		<code>$checked_data = preg_replace('/\W/si','',$tainted);</code>
		<safety safe="1" doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" rule1 = "1" rule2 = "1" rule3 = "1" rule4 = "1" rule5 ="1" />
		<!-- delete all but alphanumeric character and _ (seems ok for OWASP)
		\W Match a non-word character (a "word" character is alphanumeric plus "_")
		-->
		<relevancy>0.5</relevancy>
	</sample>

	<sample>
		<path>
			<dir>urlencode</dir>
		</path>
		<comment>SANITIZE : use of urlencode</comment>
		<code>$checked_data = urlencode($tainted);</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" rule1 = "1" />
		<!-- replace all non-alphanumeric characters except -_. by %HH and space are remplaced by +
		"-" can break out from unquoted attributes (rule 2->5) Pending for test... -->
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>rawurlencode</dir>
		</path>
		<comment>SANITIZE : use of rawurlencode</comment>
		<code>$checked_data = rawurlencode($tainted);</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" rule1 = "1" />
		<!-- replace all non-alphanumeric characters except -_.~ (~ are no longer encode in 5.3.4) by %HH
		"-" can break out from unquoted attributes (rule 5) Pending for test... -->
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>http_build_query</dir>
		</path>
		<comment>SANITIZE : use of http_build_query</comment>
		<code>$checked_data = http_build_query($tainted);</code>
		<safety doubleQuote = "1" scriptBlock = "1" styleBlock = "1" simpleQuote = "1" rule1 = "1" rule5 = "1" />
		<!-- Generates a URL-encoded query string from the associative (or indexed) array provided. 
		Pending for test
		-->
		<relevancy>0.5</relevancy>
	</sample>
	
	
	
	
</sanitize>
