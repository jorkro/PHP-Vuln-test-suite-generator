<?xml version="1.0"?>
<sanitize>
  <sample>
    <path>
      <dir>CAST</dir>
    </path>
    <comment>sanitize : cast into int</comment>
    <code>$checked_data =  (int) $tainted;</code>
    <safety safe = "0"/>
    <constraint />
    <relevancy>1</relevancy>
  </sample>

  <!-- This kind of flaw is different from the injection flaw, in fact we need to prevent injections in the samples -->
  <!-- <sample>
    <path>
      <dir>NONE</dir>
    </path>
    <comment>sanitize : NONE</comment>
    <code>$checked_data = $tainted</code>
    <safety safe = "0"/>
    <constraint block = "0"/>
    <relevancy>1</relevancy>
  </sample> -->

  <sample>
    <path>
      <dir>ESAPI</dir>
    </path>
    <comment>sanitize : uses of ESAPI, an OWASP API</comment>
    <code>//cast in int to prevent injections
$tainted = (int) $tainted;

$ESAPI = new ESAPI();
ESAPI::setEncoder(new DefaultEncoder());
ESAPI::setValidator(new DefaultValidator());

//verifying the data with ESAPI
if($ESAPI->validator->isValidNumber("Course ID", $tainted, 18, 25, false)) {
    $checked_data=$tainted;
}</code>
    <safety safe = "1"/>
    <constraint />
    <relevancy>1</relevancy>
  </sample>

  <sample>
    <path>
      <dir>Indirect_reference</dir>
    </path>
    <comment>sanitize : uses indirect reference</comment>
    <code>//cast in int to prevent injections
$tainted = (int) $tainted;

$course_array=array();
//get the user id
$user_id = intval($_SESSION[‘user_id’]);

//creation of the references with only data allowed to the user
$result = mysql_query("SELECT * FROM COURSE where course.allowed = {$user_id}");

while ($row = mysql_fetch_array($result)){
  $course_array[] = $result[‘id’];
}

$_SESSION[‘course_array’] = $course_array;
if (isset($_SESSION[‘course_array’])){
  $course_array = $_SESSION[‘course_array’];

  if (isset($course_array[$tainted])){

    //indirect reference > get the right id
    $checked_data = $course_array[$tainted];
}</code>
    <safety safe = "1"/>
    <constraint />
    <relevancy>1</relevancy>
  </sample>

  <sample>
    <path>
      <dir>Whitelist</dir>
    </path>
    <comment>sanitize : uses a whitelist</comment>
    <code>$whitelist =  array("4", "8", "15", "16", "23", "42");
if (in_array($tainted, $whitelist, true)) {
  $checked_data = $tainted;
} else {
  $checked_data = $whitelist[0];
}</code>
    <safety safe = "1"/>
    <constraint />
    <relevancy>1</relevancy>
  </sample>
</sanitize>
