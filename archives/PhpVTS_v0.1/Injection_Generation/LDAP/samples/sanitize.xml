<?xml version="1.0"?>

<sanitize>
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>email_filter</dir>
		</path>
		<comment>Uses an email_filter via filter_var function</comment>
		<code>$sanitized = filter_var($tainted, FILTER_SANITIZE_EMAIL);
if (filter_var($sanitized, FILTER_VALIDATE_EMAIL)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>full_special_chars_filter</dir>
		</path>
		<comment>Uses a full_special_chars_filter via filter_var function</comment>
		<code>$sanitized = filter_var($tainted, FILTER_SANITIZE_FULL_SPECIAL_CHARS);
if (filter_var($sanitized, FILTER_VALIDATE_FULL_SPECIAL_CHARS)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>magic_quotes_filter</dir>
		</path>
		<comment>Uses a magic_quotes_filter via filter_var function</comment>
		<code>$sanitized = filter_var($tainted, FILTER_SANITIZE_MAGIC_QUOTES);
if (filter_var($sanitized, FILTER_VALIDATE_MAGIC_QUOTES)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>number_float_filter</dir>
		</path>
		<comment>Uses a number_float_filter via filter_var function</comment>
		<code>$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_FLOAT);
if (filter_var($sanitized, FILTER_VALIDATE_NUMBER_FLOAT)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>number_int_filter</dir>
		</path>
		<comment>Uses a number_int_filter via filter_var function</comment>
		<code>$sanitized = filter_var($tainted, FILTER_SANITIZE_NUMBER_INT);
if (filter_var($sanitized, FILTER_VALIDATE_NUMBER_INT)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>CLEANING</dir>
			<dir>special_chars_filter</dir>
		</path>
		<comment>Uses a special_chars_filter via filter_var function</comment>
		<code>$sanitized = filter_var($tainted, FILTER_SANITIZE_SPECIAL_CHARS);
if (filter_var($sanitized, FILTER_VALIDATE_SPECIAL_CHARS)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>VALIDATION</dir>
			<dir>email_filter</dir>
		</path>
		<comment>Flushes content of $sanitized if the filter email_filter is not applied</comment>
		<code>if (filter_var($sanitized, FILTER_VALIDATE_EMAIL)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "string" field=""/>
		<isSafe safe = "0" needQuote = "0"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>VALIDATION</dir>
			<dir>full_special_chars_filter</dir>
		</path>
		<comment>Flushes content of $sanitized if the filter full_special_chars__filter is not applied</comment>
		<code>if (filter_var($sanitized, FILTER_VALIDATE_FULL_SPECIAL_CHARS)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "string" field=""/>
		<isSafe safe = "0" needQuote = "0"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>VALIDATION</dir>
			<dir>magic_quotes_filter</dir>
		</path>
		<comment>Flushes content of $sanitized if the filter magic_quotes_filter is not applied</comment>
		<code>if (filter_var($sanitized, FILTER_VALIDATE_MAGIC_QUOTES)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "string" field=""/>
		<isSafe safe = "0" needQuote = "0"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>VALIDATION</dir>
			<dir>number_float_filter</dir>
		</path>
		<comment>Flushes content of $sanitized if the filter number_float_filter is not applied</comment>
		<code>if (filter_var($sanitized, FILTER_VALIDATE_NUMBER_FLOAT)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "int" field=""/>
		<isSafe safe = "1" neeQuote = "0"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>VALIDATION</dir>
			<dir>number_int_filter</dir>
		</path>
		<comment>Flushes content of $sanitized if the filter number_int_filter is not applied</comment>
		<code>if (filter_var($sanitized, FILTER_VALIDATE_NUMBER_INT)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "int" field=""/>
		<isSafe safe = "1" neeQuote = "0"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>FILTER</dir>
			<dir>VALIDATION</dir>
			<dir>special_chars_filter</dir>
		</path>
		<comment>Flushes content of $sanitized if the filter special_chars_filter is not applied</comment>
		<code>if (filter_var($sanitized, FILTER_VALIDATE_SPECIAL_CHARS)) 
$checked_data = $sanitized ;
else
$checked_data = "" ;</code>
		<constraint type = "int" field=""/>
		<isSafe safe = "0" neeQuote = "0"/>
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_float</dir>
		</path>
		<comment>sanitize : cast in float</comment>
		<code>$checked_data =  (float) $tainted ;</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_float_sort_of</dir>
		</path>
		<comment>sanitize : cast via += 0.0</comment>
		<code>$checked_data =  $tainted ;
$checked_data += 0.0 ;</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_int</dir>
		</path>
		<comment>sanitize : cast into int</comment>
		<code>$checked_data =  (int) $tainted ;</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_int_sort_of</dir>
		</path>
		<comment>sanitize : cast via += 0</comment>
		<code>$checked_data =  $tainted ;
$checked_data += 0 ;</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>cast_int_sort_of2</dir>
		</path>
		<comment>sanitize : cast via += 0</comment>
		<code>$checked_data =  $tainted + 0;</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>settype_float</dir>
		</path>
		<comment>sanitize : settype (float)</comment>
		<code>if(settype($tainted, "float"))
$checked_data = $tainted ;
else
$checked_data = 0.0 ;</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>CAST</dir>
			<dir>settype_int</dir>
		</path>
		<comment>sanitize : use of floatval</comment>
		<code>if (settype($tainted, "integer"))
$checked_data = $integer ;
else
$checked_data = 0 ;
</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>addslashes</dir>
		</path>
		<comment>sanitize : use of the function addslashes</comment>
		<code>$checked_data = addslashes($tainted);</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>no_sanitizing</dir>
		</path>
		<comment>sanitize : none</comment>
		<code>$checked_data = $tainted;</code>
		<constraint type = "" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>floatval</dir>
		</path>
		<comment>sanitize : use of floatval</comment>
		<code>$checked_data = floatval($tainted);</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>htmlentities</dir>
		</path>
		<comment>sanitize : use of the function htmlentities. Sanitizes the query but has a high chance to produce unexpected results</comment>
		<code>$checked_data = htmlentities($tainted, ENT_QUOTES);</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>0.25</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>htmlspecialchars</dir>
		</path>
		<comment>sanitize : use of the function htmlspecialchars. Sanitizes the query but has a high chance to produce unexpected results</comment>
		<code>$checked_data = htmlspecialchars($tainted, ENT_QUOTES);</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>0.25</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>intval</dir>
		</path>
		<comment>sanitize : use of intval</comment>
		<code>$checked_data = intval($tainted);</code>
		<constraint type = "int" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>mysql_real_escape_string</dir>
		</path>
		<comment>SANITIZE : use of mysql_real_escape string</comment>
		<code>$data_checked = mysql_real_escape_string($tainted);</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>pg_escape_literal</dir>
		</path>
		<comment>SANITIZE : use of pg_escape_literal</comment>
		<code>$checked_data = pg_escape_literal($tainted);</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>pg_escape_string</dir>
		</path>
		<comment>SANITIZE : use of pg_escape_string</comment>
		<code>$checked_data = pg_escape_string($tainted);</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>preg_replace</dir>
		</path>
		<comment>SANITIZE : use of preg_replace</comment>
		<code>$checked_data = preg_replace('/\'/', '', $tainted);</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>preg_replace2</dir>
		</path>
		<comment>SANITIZE : use of  with another regex</comment>
		<code>$checked_data = preg_replace('/\W/si','',$tainted);</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "0" needQuote = "0" />
		<relevancy>0.5</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>ternary_white_list</dir>
		</path>
		<comment>sanitize : use of ternary condition</comment>
		<code>$checked_data = $tainted == 'DESC' ? 'DESC' : 'ASC';</code>
		<constraint type = "string" field = "ORDER_DIRECTION"/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>whitelist_using_array</dir>
		</path>
		<comment>SANITIZE : use in_array to check if $tainted is in the white list</comment>
		<code>$legal_table =  array("users", "connexions");
if (in_array($tainted, $legal_table, true)) {
$data_checked = $tainted;
} else {
	$data_checked = $legal_table[0];
}</code>
		<constraint type = "string" field = "FROM"/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>preg_replace_ldap_char_white_list</dir>
		</path>
		<comment>SANITIZE : use preg_replace to keep only char, number and _ ,\, -</comment>
		<code>$checked_data = preg_replace( "/[^a-zA-Z0-9_\ -]/", "", $tainted );</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
	<sample>
		<path>
			<dir>str_replace_ldap_char_black_list</dir>
		</path>
		<comment>SANITIZE : use str_replace to escape special chars -</comment>
		<code>$replace_tab=array('\\' => '\5c',
                     '*' => '\2a',
                     '(' => '\28',
                     ')' => '\29',
                     "\x00" => '\00');

    $checked_data = str_replace(array_keys($replace_tab),array_values($replace_tab),$tainted);</code>
		<constraint type = "string" field = ""/>
		<isSafe safe = "1" needQuote = "0" />
		<relevancy>1</relevancy>
	</sample>
	
</sanitize>
